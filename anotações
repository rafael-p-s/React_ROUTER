**QUE √â REACT ROUTER?**
√â um dos pacotes mais utilizados para criar uma estrutura de rotas em aplica√ß√µes de React:
Ou seja, permite que nossas "SPAs" tenham m√∫ltiplas p√°ginas, sendo pr√≥prio do REACT;
Precisamos instalar no nosso projeto, as configura√ß√µes para utiliza√ß√£o.
Tamb√©m temos outras fun√ß√µes como: "Redirect, Nested Routes, Not Found Routes(404)" e outros.

COME√áAR:
Para configurar o React Router √© necess√°rio ter que importar tr√™s elementos de react-router-dom:
-BrowserRouter: ir√° definir onde a √°rea do nosso app que vai trocar as p√°ginas;
-Routes: define as rotas;
-Route: um elemento deste para cada rota, configurar com path componente da rota.'

# üëáÔ∏è with NPM

npm install react-router-dom
npm i json-server // para executar: npm run server

# üëáÔ∏è ONLY If you use TypeScript

npm install --save-dev @types/react-router-dom

{/_ Elementros fora do ROUTES , /\, ser√£o repetidos em todas as p√°ginas, mas tudo dentro ir√° ser novo. _/}
<BrowserRouter>
<Routes>
{/_ Esse "Route" ir√° exibir no caso o conteudo dentro do arquivo Home.js _/}
<Route path="/" element={<Home />} />
<Route path="/about" element={<About />} />
</Routes>
</BrowserRouter>

---

---

---

**_ADICIONANDO LINKS_**
Para navergar entre as p√°ginas √© necess√°rio utilizar o "Link" do React Router. Esse link √© configurado com o par√¢metro "to", que receber a URL/path que ser√° redirecionado quando clicar no link.
Exemplo:

Criar um arquivo:

import { Link } from "react-router-dom";

export function Navbar() {
return (
<nav>
<Link to="/">Home - Link</Link>
{/_ Esse cara de cima /\ √© semelhante com esse\/ _/}
{/_ <a href="/">Home - a</a> _/}
{/_ Porem o "Link" faz o direcionamento sem fazer o RELOAD DA PAGINA, trocando somento os componentes. _/}
<Link to="/about">About Me</Link>
</nav>
);
}

{/_ Elementros fora do ROUTES , /\, ser√£o repetidos em todas as p√°ginas, mas tudo dentro ir√° ser novo. _/}
<BrowserRouter>
{/_ Por se repetir mas tendo elementos do REACT-ROUTER √© necess√°rio colocar dentro do BrowserRouter _/}
<Navbar />
<Routes>
{/_ Esse "Route" ir√° exibir no caso o conteudo dentro do arquivo Home.js _/}
<Route path="/" element={<Home />} />
<Route path="/about" element={<About />} />
</Routes>
</BrowserRouter>

---

---

---
***CARREGANDO DADOS***
Usando o HOOK com useFetch, para ser poss√≠vel utiliz√°-los para carregamento de dados individuais. Utilizando o HOOK igual ao da √∫ltima se√ß√£o e vamos imprimir os produtos na Home da mesma forma.
---

---

---
***ROTA DIN√ÇMICA***
Para criar uma rota din√¢mica vamos precisar definir uma "nova Route" em "App.js", que deve ter o padr√£o de: "/products/:id".
Sendo ":id" o dado din√¢mico,ou seja, podemos ter qualquer valor;
Na pg podemos utilizar o hook "useParams" para resgatar esta informa√ß√£o;
---

---

---
**CARREGAMENTO DE DADO INDIVIDUAL**
Devido ao **CARREGAMENTO INDIVIDUAL**, ser√° utilizado o id recebido para formar a nova URL. Sendo que por fim podemos utiliza o hook "useFetch" para trazer o item.
Fazendo por fim a valida√ß√£o e ipress√£o do mesmo no JSX;
---

---

---
**NESTED ROUTE**
As "nested routes" indicam "URLs mais complexas, como: "/products:id/something". Que neste caso vamos precisar criar um componente que corresponde com o padr√£o indicado e tamb√©m a URL em App.js.
Na nested route teremos o acesso ao par√¢metro da ULR.
---

---

---
**NO MATCH ROUTE(404)**
√â poss√≠vel criar uma pg404 facilmente com o React Router. Basta criarmos o componente da pg.
E no arquivo App.js definir um path como *. Desta maneira, qualquer rota que n√£o exista cair√° neste componente.
---

---

---
**LINK ATIVO**
Para ter f√°cil acesso a uma modifica√ß√£o para os links atvos vamos trocar o link pelo NavLink.
Neste elemento temos acesso a um valor chamado "isActive".
Podemos ativar uma classe se a rota atual for a que est√° no atributo "to".
---

---

---
**SEARCH PARAMS**
"Search Params" √© um recurso que permite obter o que vem na URL em forma de par√¢metro, ex: produtos?q=camisa.
Utiliza o hook "useSearchParams" para obt√™-los, com este recurso fica simples fazer uma funcionalidade de busa no sistea.
---

---

---
**REDIRECT**
Pode vir a precisar de um redirecionamento e p√°ginas eventualmente.
Exemplo: uma pg antiga do sistema responde agora a uma nova URL.
Para que isso ocorra √© necess√°rio criar a roa ROUTE normalmente, mas, em "element" vamos utilizar o componente Navigate com um "to" que vai para a rota correta.